<Students>
	<Student>
		name: Fred Jones
		age: 15
		male: true || false
	</Student>

	<Student>
		name: Joe Smith
		age: 15
	</Student>
</Students>



Students {
	Student {
		name: Fred Jones
		age: 15
		male: true || false
	}

	Student {
		name: Joe Smith
		age: 15
	}
}asdfasdfasdf


max(x, y) = if x > y then x else y
where {asdfasdfasdf
	x = 3
}

max{x, y} = if x > y {x} else {y}
where {
	x = 3
}



howBig(val) = if
	val > MAX_VALUE  then "too big"
	val == MAX_VALUE then "almost too big"
	val > 0          then "good size"
                     else "nothing"


concat(a, b) = a + b


myStyle = style {
	color: { red:220 green:193 blue:204
	lineWidth: 23px
	lineStyle: dashed
}




studentReport = {
	header{Students by name}
	ourStudents.sort(name).{
		studentFields{student}
	}

	header{Students by age}
	ourStudents.sort(age).{
		studentFields{student}
	}
}
where {
	ourStudents = students.where(age > 13)

	studentFields{student: Student} = {
		labeledField nameField {label:Student name  value:name}
		labeledField ageField {label:Student age  value:age}
	}
}



view {
	students.where(age > 13).sort(name).{
		{Item  label: Name  value: name}
		{Item  label: Name  value: name}


		Item{label: Name  value: name}
		Item{label: Name  value: name}

		{item
			label: Name
			value: name
		}

		item {
			label: Name
			value: name
		}


		if (myTest)
			item {
				label: Name
				value: name
			}


		nameItem = item {
			label: Name
			value: name
		}

		severalItems {
			rule: myRule
		}

		<Item>
			label: Age
			value: age
		</Item>
	}
}

where {
	getStudents(all) =
		if all then
			students
		else
			students.where(age > 13)\

		
	getStudents(all) =
		if all then
			students
		else
			students.where(age > 13)
}


This is some {Bold emphasized} text.


This is some Bold{emphasized} text.


This is some {b emphasized} text.


This is some b{emphasized} text.


This is some {bold emphasized} text.


This is some bold{emphasized} text.



function studentView(students: Students) = View {
	students.where(age > 13).sort(name).{
		Item {
			label: Name
			value: name
		}

		Item {
			label: Age
			value: age
		}
	}
}


function studentView(students: Students) = view {
	students.where(age > 13).sort(name).{
		item {
			label: Name
			value: name
		}

		item {
			label: Age
			value: age
		}

		item {
			label: Age
			value: age
		}
	}
}



View(myStudents)

View(
	students: myStudents
)

View{students: myStudents}


View {



}


View {
	Item {
		label: My label
		value: 3
	}
}

	